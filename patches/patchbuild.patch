diff --git a/frameworks/base/core/java/android/view/KeyEvent.java b/frameworks/base/core/java/android/view/KeyEvent.java
index c2a3e58..ee2f239 100755
--- a/frameworks/base/core/java/android/view/KeyEvent.java
+++ b/frameworks/base/core/java/android/view/KeyEvent.java
@@ -624,7 +624,12 @@ public class KeyEvent extends InputEvent implements Parcelable {
      * Launches the global assist activity.  Not delivered to applications. */
     public static final int KEYCODE_ASSIST          = 219;
 
-    private static final int LAST_KEYCODE           = KEYCODE_ASSIST;
+    //TPT START
+    public static final int KEYCODE_AUTO_ROTATION   = 220;
+    public static final int KEYCODE_TOUCH_DISABLER  = 221;
+ 
+    private static final int LAST_KEYCODE           = KEYCODE_TOUCH_DISABLER;
+    //TPT END
 
     // NOTE: If you add a new keycode here you must also add it to:
     //  isSystem()
@@ -866,6 +871,10 @@ public class KeyEvent extends InputEvent implements Parcelable {
         names.append(KEYCODE_RO, "KEYCODE_RO");
         names.append(KEYCODE_KANA, "KEYCODE_KANA");
         names.append(KEYCODE_ASSIST, "KEYCODE_ASSIST");
+	//TPT start
+        names.append(KEYCODE_AUTO_ROTATION, "KEYCODE_AUTO_ROTATION");
+        names.append(KEYCODE_TOUCH_DISABLER, "KEYCODE_TOUCH_DISABLER");
+	//TPT end
     };
 
     // Symbolic names of all metakeys in bit order from least significant to most significant.
diff --git a/frameworks/base/core/res/res/values/attrs.xml b/frameworks/base/core/res/res/values/attrs.xml
index 447daab..1487984 100755
--- a/frameworks/base/core/res/res/values/attrs.xml
+++ b/frameworks/base/core/res/res/values/attrs.xml
@@ -1541,6 +1541,10 @@
         <enum name="KEYCODE_YEN" value="216" />
         <enum name="KEYCODE_RO" value="217" />
         <enum name="KEYCODE_KANA" value="218" />
+	<!--TPT start-->
+	<enum name="KEYCODE_AUTO_ROTATION" value="219" />
+	<enum name="KEYCODE_TOUCH_DISABLER" value="220" />
+	<!--TPT end-->
     </attr>
 
     <!-- ***************************************************************** -->
diff --git a/frameworks/base/include/androidfw/KeycodeLabels.h b/frameworks/base/include/androidfw/KeycodeLabels.h
index 538949d..95b2f3a 100755
--- a/frameworks/base/include/androidfw/KeycodeLabels.h
+++ b/frameworks/base/include/androidfw/KeycodeLabels.h
@@ -244,6 +244,10 @@ static const KeycodeLabel KEYCODES[] = {
     { "RO", 217 },
     { "KANA", 218 },
     { "ASSIST", 219 },
+    //TPT start
+    { "AUTO_ROTATION", 220},
+    { "TOUCH_DISABLER", 221},
+    //TPT end
 
     // NOTE: If you add a new keycode here you must also add it to several other files.
     //       Refer to frameworks/base/core/java/android/view/KeyEvent.java for the full list.
diff --git a/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java b/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
index 6ea2077..c6028f3 100755
--- a/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
+++ b/frameworks/base/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
@@ -2140,6 +2140,24 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             WindowManager.LayoutParams.TYPE_SYSTEM_ERROR,
         };
 
+  //TPT
+    void showToast(final String i) {
+        mHandler.post(new Runnable() {
+            @Override
+            public void run() {
+            CharSequence text = "Error";
+
+            text = i;
+
+            int duration = Toast.LENGTH_SHORT;
+
+            Toast toast = Toast.makeText(mContext, text, duration);
+            toast.show();
+            }
+        });
+    }
+  //TPT END
+
     /** {@inheritDoc} */
     @Override
     public long interceptKeyBeforeDispatching(WindowState win, KeyEvent event, int policyFlags) {
@@ -2421,7 +2439,39 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     mHandler.postDelayed(mBackLongPress, mBackKillTimeout);
                 }
             }
-        }
+        } else if (keyCode == KeyEvent.KEYCODE_AUTO_ROTATION && down) { //TPT start
+            int ret = Settings.System.getInt(mContext.getContentResolver(), 
+                Settings.System.ACCELEROMETER_ROTATION, 0);
+
+            try {
+                if(ret == 0){
+                    mWindowManager.thawRotation();
+                    showToast("Auto Rotation Enabled");
+                } else {
+                    mWindowManager.freezeRotation(-1);
+                    showToast("Auto Rotation Disabled");
+                }
+            } catch (RemoteException exc) {
+                showToast("Auto Rotation Toggle Error");
+                Log.w(TAG, "Unable to save auto-rotate setting");
+            }
+        } else if (keyCode == KeyEvent.KEYCODE_TOUCH_DISABLER && down) {
+            if(SystemProperties.getInt("touch.enable", 1) == 1) {
+                try {
+                    Runtime.getRuntime().exec("tpt-touch-enabler 0");
+                } catch(Exception d) {
+                    Log.w(TAG, "Unable to disable Touch: "+d.getMessage());
+                }
+                showToast("Touchscreen Disabled");
+            } else {
+                try {
+                    Runtime.getRuntime().exec("tpt-touch-enabler 1");
+                } catch(Exception d) {
+                    Log.w(TAG, "Unable to enable Touch: "+d.getMessage());
+                }
+                showToast("Touchscreen Enabled");
+            }
+        }//TPT End
 
         // Shortcuts are invoked through Search+key, so intercept those here
         // Any printing key that is chorded with Search should be consumed
